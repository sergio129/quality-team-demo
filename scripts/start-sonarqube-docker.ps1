# Script para iniciar SonarQube con Docker y ejecutar an√°lisis
# Autor: GitHub Copilot
# Fecha: 26 de mayo de 2025

Write-Host "üöÄ Iniciando SonarQube con Docker" -ForegroundColor Cyan

# Comprobar si Docker est√° funcionando
try {
    $dockerStatus = docker info 2>&1
    if ($LASTEXITCODE -ne 0) {
        Write-Host "‚ùå Docker no est√° en funcionamiento. Por favor, inicie Docker Desktop." -ForegroundColor Red
        exit 1
    }
} catch {
    Write-Host "‚ùå Docker no parece estar instalado o accesible. Verifique la instalaci√≥n de Docker." -ForegroundColor Red
    exit 1
}

# Comprobar si el contenedor sonarqube ya est√° ejecut√°ndose
$containerRunning = docker ps -q -f name=sonarqube
if (-not $containerRunning) {
    # Verificar si existe un contenedor detenido
    $stoppedContainer = docker ps -aq -f name=sonarqube
    if ($stoppedContainer) {
        Write-Host "üîÑ Eliminando contenedor sonarqube existente..." -ForegroundColor Yellow
        docker rm -f sonarqube
    }
    
    Write-Host "üê≥ Iniciando contenedor de SonarQube..." -ForegroundColor Cyan
    docker run -d --name sonarqube -p 9000:9000 sonarqube:latest
    
    Write-Host "‚è≥ Esperando a que SonarQube est√© disponible (esto puede tardar hasta 2 minutos)..." -ForegroundColor Yellow
    
    $ready = $false
    $attempts = 0
    $maxAttempts = 24  # 24 intentos * 5 segundos = 2 minutos m√°ximo
    
    while (-not $ready -and $attempts -lt $maxAttempts) {
        try {
            $response = Invoke-WebRequest -Uri "http://localhost:9000/api/system/status" -UseBasicParsing -ErrorAction SilentlyContinue
            if ($response.StatusCode -eq 200) {
                $ready = $true
                Write-Host "`n‚úÖ SonarQube est√° listo para usar" -ForegroundColor Green
            }
        } catch {
            Write-Host "." -NoNewline -ForegroundColor Yellow
            $attempts++
            Start-Sleep -Seconds 5
        }
    }
    
    if (-not $ready) {
        Write-Host "`n‚ùå SonarQube no respondi√≥ en el tiempo esperado." -ForegroundColor Red
        Write-Host "Por favor, verifique manualmente el estado accediendo a http://localhost:9000" -ForegroundColor Yellow
        exit 1
    }
    
    Write-Host "`nüìù Informaci√≥n importante:" -ForegroundColor Cyan
    Write-Host "1. El usuario predeterminado es 'admin' y la contrase√±a es 'admin'" -ForegroundColor White
    Write-Host "2. Se le pedir√° cambiar la contrase√±a en el primer inicio de sesi√≥n" -ForegroundColor White
    Write-Host "3. Acceda a http://localhost:9000 para ver la interfaz web de SonarQube" -ForegroundColor White
    Write-Host "4. Para generar un token, vaya a su cuenta > Mi Cuenta > Tokens de seguridad" -ForegroundColor White
} else {
    Write-Host "‚úÖ El contenedor SonarQube ya est√° en ejecuci√≥n" -ForegroundColor Green
}

# Ejecutar el an√°lisis
Write-Host "`nüîç Ejecutando an√°lisis del c√≥digo fuente..." -ForegroundColor Cyan
Write-Host "Ejecutando: npm run sonar:run" -ForegroundColor White
npm run sonar:run

Write-Host "`n‚úÖ Proceso completado. Revise los resultados en http://localhost:9000" -ForegroundColor Green
